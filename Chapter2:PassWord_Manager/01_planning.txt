# The password manager will need to:

# Allow a user add new passwords
# Allow a user to view a specific password
# Allow a user to see a list of all the services for which a password has been stored

# will need to take user input
# will need to store passwords in a list
# will need to see in which services a password is stored
  #search by service 
  #key:value pairs
  #service:passWord 

# dictionary -

# person = {
#     "name": "John Doe",
#     "age": 35,
#     "city": "London",
#     "occupation": "Software Engineer"
# }

store service:password in a dictionary, maybe dictionaries are stored in a list

methods:

- __init__ 
no Arguments
self.dict = {}

- add(service_name, password)
/arguments are strings/
no Returns

if password is valid create dictionary entry ie:
Â¸
    arr = ["!", "@", "$", "%", "&"]

    for char in arr:
        if password.find(char) >= 0 and len(password) >= 8 :
        self.dict[service_name] = password
        else:
            None

- get_for_service(service_name)
returns the password for the service name.

self.dict.get(service_name)

- list_services()

keys = list(self.dict.keys())

return keys